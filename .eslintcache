[{"C:\\Users\\elsaf\\projects\\Pokefight\\Client\\src\\index.js":"1","C:\\Users\\elsaf\\projects\\Pokefight\\Client\\src\\App.js":"2","C:\\Users\\elsaf\\projects\\Pokefight\\Client\\src\\reportWebVitals.js":"3","C:\\Users\\elsaf\\projects\\pokefight\\Client\\src\\index.js":"4","C:\\Users\\elsaf\\projects\\pokefight\\Client\\src\\App.js":"5"},{"size":320,"mtime":1607527211481,"results":"6","hashOfConfig":"7"},{"size":1235,"mtime":1607533193108,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":320,"mtime":1607527211481,"results":"10","hashOfConfig":"11"},{"size":3525,"mtime":1607618234292,"results":"12","hashOfConfig":"11"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1bdfy0j",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ugznk9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"C:\\Users\\elsaf\\projects\\Pokefight\\Client\\src\\index.js",[],["26","27"],"C:\\Users\\elsaf\\projects\\Pokefight\\Client\\src\\App.js",["28"],"C:\\Users\\elsaf\\projects\\Pokefight\\Client\\src\\reportWebVitals.js",[],"C:\\Users\\elsaf\\projects\\pokefight\\Client\\src\\index.js",[],["29","30"],"C:\\Users\\elsaf\\projects\\pokefight\\Client\\src\\App.js",["31","32","33"],"import React, { useState, useEffect } from \"react\";\nimport { Link, Switch, Route, useParams } from \"react-router-dom\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nconst PokemonList = () => {\n  const [pokemon, setPokemon] = useState([]);\n  useEffect(() => {\n    fetch(\"https://pokefight-api.herokuapp.com/pokemon\")\n      .then((res) => res.json())\n      .then((res) => setPokemon(res));\n  }, []);\n\n  return pokemon ? (\n    <>\n      <ul>\n        {pokemon.map((p) => (\n          <li key={p.id}>\n            <Link to={`/pokemon/${p.id}`}>\n              <img\n                src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${p.id}.png`}\n              />\n              {p.name.english}\n            </Link>\n          </li>\n        ))}\n        <div className=\"clear\"></div>\n      </ul>\n    </>\n  ) : (\n    <>\n      <h1>Loading...</h1>\n      <Spinner animation=\"border\" variant=\"light\" className=\"spnr\" />\n    </>\n  );\n};\n\nconst PokemonSingle = () => {\n  const { id } = useParams();\n  const [matchedPokemon, setMatchedPokemon] = useState();\n\n  useEffect(() => {\n    // do something after pokemon is loaded\n  }, [matchedPokemon]);\n  useEffect(() => {\n    fetch(`https://pokefight-api.herokuapp.com/pokemon/${id}`)\n      .then((res) => res.json())\n      .then((res) => setMatchedPokemon(res));\n  }, []);\n\n  return matchedPokemon ? (\n    <div className=\"detail\">\n      <h1>{matchedPokemon.name.english}</h1>\n      <h2>ID: {matchedPokemon.id}</h2>\n      <div>\n        <img\n          src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`}\n        />\n        <p>\n          <b>Type: </b>\n          {matchedPokemon.type}\n          <br />\n        </p>\n        <p>\n          <b>HP: </b>\n          {matchedPokemon.base.HP}\n        </p>\n        <p>\n          <b>Attack: </b>\n          {matchedPokemon.base.Attack}\n        </p>\n        <p>\n          <b>Defense: </b>\n          {matchedPokemon.base.Defense}\n        </p>\n        <p>\n          <b>Speed: </b>\n          {matchedPokemon.base.Speed}\n        </p>\n      </div>\n    </div>\n  ) : (\n    <Spinner animation=\"border\" variant=\"light\" />\n  );\n};\n\nconst PokemonSingleInfo = ({ pokemon }) => {\n  const { id } = useParams();\n  const { info } = useParams();\n  const [matchedPokemon, setMatchedPokemon] = useState();\n  useEffect(() => {\n    fetch(`https://pokefight-server.herokuapp.com/pokemon/${id}/${info}`)\n      .then((res) => res.json())\n      .then((res) => setMatchedPokemon(res));\n  }, [id, info]);\n  return matchedPokemon ? (\n    <div className=\"detail\">\n      <h1>{matchedPokemon[info]}</h1>\n    </div>\n  ) : (\n    <Spinner animation=\"border\" variant=\"light\" />\n  );\n};\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"outdo\">\n        <Link to=\"/\">\n          <img\n            className=\"logo\"\n            title=\"Reset Game\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/2000px-International_Pok%C3%A9mon_logo.svg.png\"\n            alt=\"Pokemon\"\n          />\n        </Link>\n        <h1>Pokefight</h1>\n        <Switch>\n          <Route exact path=\"/\">\n            <PokemonList />\n          </Route>\n          <Route exact path=\"/pokemon/:id\">\n            <PokemonSingle />\n          </Route>\n          <Route exact path=\"/pokemon/:id/:info\">\n            <PokemonSingleInfo />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":29,"column":6,"nodeType":"40","endLine":29,"endColumn":8,"suggestions":"41"},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":21,"column":15,"nodeType":"46","endLine":23,"endColumn":17},{"ruleId":"38","severity":1,"message":"39","line":50,"column":6,"nodeType":"40","endLine":50,"endColumn":8,"suggestions":"47"},{"ruleId":"44","severity":1,"message":"45","line":57,"column":9,"nodeType":"46","endLine":59,"endColumn":11},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["50"],["48"],["49"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["51"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},{"desc":"52","fix":"54"},"Update the dependencies array to be: [id]",{"range":"55","text":"56"},{"range":"57","text":"56"},[812,814],"[id]",[1390,1392]]